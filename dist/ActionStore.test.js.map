{"version":3,"sources":["../dist-es6/ActionStore.test.js"],"names":["describe","store","allActions","SAVE_USER","DELETE_USER","AUTH_USER","FORGOT_PASSWORD","UPDATE_PASSWORD_TOKEN","UPDATE_PASSWORD","authUser","dtCreated","Date","ip","beforeEach","toDoStore","subscribeAll","action","actionType","console","log","it","dispatch","args","userName","id","done","user","displayName","email","password","saveUser","data","subscribe"],"mappings":";;AAAA;;AACAA,SAAS,mBAAT,EAA8B,YAAM;AAChC,QAAIC,KAAJ;AACA,QAAMC,aAAa;AACfC,mBAAW,WADI;AAEfC,qBAAa,aAFE;AAGfC,mBAAW,WAHI;AAIfC,yBAAiB,iBAJF;AAKfC,+BAAuB,0BALR;AAMfC,yBAAiB;AANF,KAAnB;AAQA,QAAMC,WAAW,EAAEC,WAAW,IAAIC,IAAJ,EAAb,EAAyBC,IAAI,WAA7B,EAAjB;AACAC,eAAW,YAAM;AACbZ,gBAAQ,8BAAR;AACAA,cAAMa,SAAN,CAAgBC,YAAhB,CAA6B,kBAAU;AACnC,oBAAQC,OAAOC,UAAf;AACI,qBAAKf,WAAWG,SAAhB;AACIa,4BAAQC,GAAR,CAAY,0BAAZ;AACA;AACJ,qBAAKjB,WAAWE,WAAhB;AACIc,4BAAQC,GAAR,CAAY,4BAAZ;AACA;AACJ,qBAAKjB,WAAWI,eAAhB;AACIY,4BAAQC,GAAR,CAAY,gCAAZ;AACA;AACJ,qBAAKjB,WAAWC,SAAhB;AACIe,4BAAQC,GAAR,CAAY,0BAAZ;AACA;AACJ,qBAAKjB,WAAWM,eAAhB;AACIU,4BAAQC,GAAR,CAAY,gCAAZ;AACA;AACJ,qBAAKjB,WAAWK,qBAAhB;AACIW,4BAAQC,GAAR,CAAY,sCAAZ;AACA;AACJ;AAAS;AAnBb;AAqBH,SAtBD;AAuBAlB,cAAMa,SAAN,CAAgBC,YAAhB,CAA6B;AAAA,mBAAUG,QAAQC,GAAR,CAAY,uBAAuBH,OAAOC,UAA1C,CAAV;AAAA,SAA7B;AACH,KA1BD;AA2BAG,OAAG,cAAH,EAAmB,YAAM;AACrBnB,cAAMa,SAAN,CAAgBO,QAAhB,CAAyB,EAAEJ,YAAYf,WAAWC,SAAzB,EAAoCmB,MAAM,EAAEC,UAAU,aAAZ,EAA1C,EAAzB;AACAtB,cAAMa,SAAN,CAAgBO,QAAhB,CAAyB,EAAEJ,YAAYf,WAAWG,SAAzB,EAAoCiB,MAAM,EAAEC,UAAU,aAAZ,EAA1C,EAAzB;AACAtB,cAAMa,SAAN,CAAgBO,QAAhB,CAAyB,EAAEJ,YAAYf,WAAWE,WAAzB,EAAsCkB,MAAM,EAAEE,IAAI,SAAN,EAA5C,EAAzB;AACH,KAJD;AAKAJ,OAAG,0BAAH,EAA+B,UAACK,IAAD,EAAU;AACrC,YAAMC,OAAO;AACTC,yBAAa,cADJ;AAETC,mBAAO,uBAFE;AAGTL,sBAAU,aAHD;AAITM,sBAAU;AAJD,SAAb;AAMA,iBAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpBN;AACH;AACDxB,cAAMa,SAAN,CAAgBkB,SAAhB,CAA0B9B,WAAWC,SAArC,EAAgD2B,QAAhD;AACA7B,cAAMa,SAAN,CAAgBO,QAAhB,CAAyB;AACrBJ,wBAAYf,WAAWC,SADF;AAErBmB,kBAAM;AACFI,0BADE;AAEFjB;AAFE;AAFe,SAAzB;AAOH,KAlBD;AAmBH,CA9DD;AA+DA","file":"ActionStore.test.js","sourcesContent":["import { ActionStore } from './ActionStore';\ndescribe('Actions to replay', () => {\n    var store;\n    const allActions = {\n        SAVE_USER: 'SAVE_USER',\n        DELETE_USER: 'DELETE_USER',\n        AUTH_USER: 'AUTH_USER',\n        FORGOT_PASSWORD: 'FORGOT_PASSWORD',\n        UPDATE_PASSWORD_TOKEN: 'UPDATE_PASSWORD_BY_TOKEN',\n        UPDATE_PASSWORD: 'UPDATE_PASSWORD'\n    };\n    const authUser = { dtCreated: new Date(), ip: '195.1.1.1' };\n    beforeEach(() => {\n        store = new ActionStore();\n        store.toDoStore.subscribeAll(action => {\n            switch (action.actionType) {\n                case allActions.AUTH_USER:\n                    console.log('log subscriber AUTH_USER');\n                    break;\n                case allActions.DELETE_USER:\n                    console.log('log subscriber DELETE_USER');\n                    break;\n                case allActions.FORGOT_PASSWORD:\n                    console.log('log subscriber FORGOT_PASSWORD');\n                    break;\n                case allActions.SAVE_USER:\n                    console.log('log subscriber SAVE_USER');\n                    break;\n                case allActions.UPDATE_PASSWORD:\n                    console.log('log subscriber UPDATE_PASSWORD');\n                    break;\n                case allActions.UPDATE_PASSWORD_TOKEN:\n                    console.log('log subscriber UPDATE_PASSWORD_TOKEN');\n                    break;\n                default: break;\n            }\n        });\n        store.toDoStore.subscribeAll(action => console.log('logALL subscriber ' + action.actionType));\n    });\n    it('Play actions', () => {\n        store.toDoStore.dispatch({ actionType: allActions.SAVE_USER, args: { userName: 'angeloocana' } });\n        store.toDoStore.dispatch({ actionType: allActions.AUTH_USER, args: { userName: 'angeloocana' } });\n        store.toDoStore.dispatch({ actionType: allActions.DELETE_USER, args: { id: 'sdvsdsd' } });\n    });\n    it('GraphQL mutation example', (done) => {\n        const user = {\n            displayName: 'Ângelo Ocanã',\n            email: 'angeloocana@gmail.com',\n            userName: 'angeloocana',\n            password: 'testtest'\n        };\n        function saveUser(data) {\n            done();\n        }\n        store.toDoStore.subscribe(allActions.SAVE_USER, saveUser);\n        store.toDoStore.dispatch({\n            actionType: allActions.SAVE_USER,\n            args: {\n                user,\n                authUser\n            }\n        });\n    });\n});\n//# sourceMappingURL=ActionStore.test.js.map"]}